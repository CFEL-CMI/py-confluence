#!/usr/bin/env python
# -*- coding: utf-8; fill-column: 120 -*-
#
# Copyright (C) 2016 Alex Franke
"""
This python3 module creates a new space according to the CMI template.
The CMI template includes a custom homepage, the space categories **cfel-cmi** and **cmi-elog-calendar**.
You have to provide a servername and a user with rights to create a new space.
Additional settings like the spacekey and name of the new space are required.
"""

from confluence import spaces
import argparse

def main():
    """
    Init of creating a new space accoring to CMI template.
    """

    parser = argparse.ArgumentParser(description='This python3 module creates a new space according to the CMI template. The CMI template includes a custom homepage, the space categories **cfel-cmi** and **cmi-elog-calendar**.You have to provide a servername and a user with rights to create a new space.Additional settings like the spacekey and name of the new space are required.')
    parser.add_argument('--server', dest='server', default="https://confluence.desy.de/",help='Server address with trailing /       [default: https://confluence.desy.de/]')
    parser.add_argument('--user', dest='user', default="jkuepper",help='Please enter your Username.    [default: jkuepper]')
    parser.add_argument('--key', dest='spacekey',required=True,help='Please enter the spaceKey of the space you want to create.')
    parser.add_argument('--name', dest='spacename',required=True,help='Please enter the spaceName of the space you want to create.')

    #parser.add_argument('--readGroup', dest='readGroup', default="cmi-users",help='')
    #parser.add_argument('--writeGroup', dest='writeGroup', default="",help='')
    #parser.add_argument('--readUser', dest='readUser', default="",help='')
    #parser.add_argument('--writeUser', dest='writeUser', default="jkuepper",help='')

    args = parser.parse_args()

    if args.server[-1:] != "/":
        args.server+= "/"

    print('IMPORTANT: Please make sure you have the permission to create a space!')
    print("Please enter your password to confirm the following settings:")
    print("Server address  :  " + args.server)
    print("Username        :  " + args.user)
    print("new Spacekey    :  " + args.spacekey)
    print("new Spacename   :  " + args.spacename)
        
    #readGroup      = input("Comma separated list of GROUPS with READONLY access  [default: cmi-users]:  ") or "cmi-users"
    #writeGroup     = input("Comma separated list of GROUPS with WRITE    access  [default: none]     :  ") or ""
    #readUser       = input("Comma separated list of USERS  with READONLY access  [default: none]     :  ") or ""
    #writeUser      = input("Comma separated list of USERS  with WRITE    access  [default: you]      :  ") or ""
   
    spaces.createCMISpace(args.server,args.user,args.spacekey,args.spacename)


if __name__ == "__main__":
    main()
